-- ① TEMP KT参加社員(KT2_SCHEDULE_PARTICIPANT)
<#assign KSP_FILTER_CONDITION>
        KSP.STARTDATETIME <= TO_TIMESTAMP('${param.schCond.toDate} 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        AND (
            (KSP.TIMETYPE <> '2' AND KSP.ENDDATETIME >= TO_TIMESTAMP('${param.schCond.fromDate} 00:00:00', 'YYYY-MM-DD HH24:MI:SS'))
            OR
            (KSP.TIMETYPE = '2' AND KSP.ENDDATETIME > TO_TIMESTAMP('${param.schCond.fromDate} 00:00:00', 'YYYY-MM-DD HH24:MI:SS'))
        )
        <#if param.schCond.includingNonParticipation == 0>
        AND KSP.STATUS NOT IN (4,5)
        </#if>
</#assign>
WITH PART AS (
	SELECT 
		KSP.SCHID,
		KSP.STATUS,
		KSP.SCHEDULETYPE,
		TO_CHAR(KSP.STARTDATETIME, 'YYYY-MM-DD')  AS FROMDATE,
		CASE WHEN KSP.TIMETYPE = '2' AND TO_CHAR(KSP.ENDDATETIME, 'HH24MI') = '0000' THEN  TO_CHAR(KSP.ENDDATETIME - INTERVAL '1 DAYS', 'YYYY-MM-DD')
			ELSE TO_CHAR(KSP.ENDDATETIME, 'YYYY-MM-DD') END AS TODATE,
		CASE WHEN KSP.TIMETYPE = '0' THEN NULL ELSE  TO_CHAR(KSP.STARTDATETIME, 'HH24MI') END AS FROMTIME,
		CASE WHEN (KSP.SCHEDULETYPE = FALSE AND KSP.TIMETYPE = '2') THEN
	        (CASE
	            WHEN TO_CHAR(KSP.ENDDATETIME, 'HH24MI') = '0000' THEN '2400'
	            ELSE TO_CHAR(KSP.ENDDATETIME, 'HH24MI')
	         END
	        )
    	ELSE NULL END AS TOTIME
	FROM 
		KT2_SCHEDULE_PARTICIPANT KSP
	WHERE
		KSP.EMPID = ${param.schCond.empId}
		AND KSP.ABORTSTATE = '0'
		AND ${KSP_FILTER_CONDITION}	
)
<#if param.schCond.needParticipantName == 1>
-- ② GET PARTICIPANT INFO
, PARTICIPANTS AS (
	SELECT
		KSP.SCHID,
		ARRAY_TO_STRING(ARRAY_AGG (CASE WHEN KSP.EMPID = ${param.schCond.empId} THEN NULL ELSE EMP.EMPNAME END ORDER BY KSP.ID), ',') AS EMPNAME,
		ARRAY_TO_STRING(ARRAY_AGG (CASE WHEN KSP.EMPID = ${param.schCond.empId} THEN NULL ELSE KSP.STATUS END ORDER BY KSP.ID), ',') AS PARTSTATUS
	FROM
		KT2_SCHEDULE_PARTICIPANT KSP
	INNER JOIN PART ON
		KSP.ABORTSTATE = '0' AND KSP.SCHID = PART.SCHID
	INNER JOIN HT2_EMPLOYEE EMP ON
		KSP.EMPID = EMP.EMPID
	WHERE
	    ${KSP_FILTER_CONDITION}
	GROUP BY
		KSP.SCHID)
</#if>	
<#if param.schCond.needResourceName == 1>	
-- ③ GET RESOURCE INFO
, RESOURCES AS (
	SELECT
		RESERVE.SCHID,
		ARRAY_TO_STRING(ARRAY_AGG(INFO.RESOURCENAME ORDER BY INFO.ID), ',') AS RESOURCENAMES
	FROM
		KT2_RESOURCE_INFO INFO
	INNER JOIN KT2_RESOURCE_RSV_DETAILS DETAILS ON
		DETAILS.RESOURCEID = INFO.ID
	INNER JOIN KT2_RESOURCE_RESERVE RESERVE ON
		DETAILS.SCHID = RESERVE.ID
	INNER JOIN PART ON
		RESERVE.SCHID = PART.SCHID
	GROUP BY
	 RESERVE.SCHID)
</#if>
-- MAIN	SQL
SELECT
	PART.SCHID,
	PART.SCHEDULETYPE,
	PART.FROMDATE,
	PART.TODATE,
	PART.FROMTIME,
	PART.TOTIME,
	INFO.LABEL AS SUBJECT,
	INFO.PLANCLASS AS SCHEDULEPLANCLASSID,
	PCLASS.CLASSNAME AS SCHEDULEPLANCLASSNAME,
	INFO.DETAIL AS CONTENT,
	INFO.PLACE,
	INFO.PUBLICSTATE,
	INFO.LABELPUBLIC,
	PART.STATUS,
	<#if param.schCond.needParticipantName == 1>
	PARTICIPANTS.EMPNAME AS EMPNAME,
	PARTICIPANTS.PARTSTATUS AS PARTSTATUS,
	<#else>
	NULL :: TEXT  AS EMPNAME,
	NULL :: TEXT  AS PARTSTATUS,
	</#if>
	<#if param.schCond.needResourceName == 1> 
	RESOURCES.RESOURCENAMES
	<#else>
	NULL :: TEXT
	</#if>
	AS RESOURCENAMES
FROM
	KT2_SCHEDULE_INFO INFO
INNER JOIN PART ON
	INFO.ID = PART.SCHID
INNER JOIN KT2_SCHEDULE_PLAN_CLASS PCLASS ON
		INFO.PLANCLASS = PCLASS.ID
<#if param.schCond.needParticipantName == 1>
INNER JOIN PARTICIPANTS ON
	INFO.ID = PARTICIPANTS.SCHID
</#if>
<#if param.schCond.needResourceName == 1>
LEFT JOIN  RESOURCES ON
	INFO.ID = RESOURCES.SCHID
</#if>
ORDER BY
	PART.SCHEDULETYPE,
	PART.FROMDATE,
	PART.FROMTIME NULLS FIRST,
	PART.TODATE,
	PART.TOTIME NULLS FIRST,
	PART.SCHID